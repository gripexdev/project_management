@model ProjectDashboard.Models.UserHomeViewModel

@{
    ViewData["Title"] = "User Home Page - Home";
    ViewData["navbarHideToggle"] = true;
    ViewData["isMenu"] = false;
    ViewData["menuFixed"] = "";

    //functions that calculates time left for the task
    string GetTimeLeft(DateTime? endDate)
    {
        if (endDate == null)
        {
            return "--";
        }
        var timeLeft = endDate.Value - DateTime.Now;
        return timeLeft.Days.ToString();
    }

    string GetProgress(DateTime? startDate, DateTime? endDate)
    {
        if (startDate == null || endDate == null)
        {
            return "--";
        }

        var totalDuration = endDate.Value - startDate.Value;
        var timeElapsed = DateTime.Now - startDate.Value;

        // Handle invalid cases (start date is in the future)
        if (totalDuration.TotalDays <= 0 || timeElapsed.TotalDays < 0)
        {
            return "0%";
        }

        // Calculate progress percentage
        double progress = (timeElapsed.TotalDays / totalDuration.TotalDays) * 100;

        // Cap progress at 100%
        if (progress > 100)
        {
            progress = 100;
        }

        return $"{progress:F0}%"; // Format as a percentage with no decimal places
    }
}

<link rel="stylesheet" href="~/css/user.css" />

<!-- FullCalendar CSS -->
<script src='https://cdn.jsdelivr.net/npm/fullcalendar@6.1.8/index.global.min.js'></script>
<!-- Dragula for Drag and Drop -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/dragula/3.7.3/dragula.min.js"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/dragula/3.7.3/dragula.min.css" />

<div class="layout-demo-wrapper">
    <div class="layout-demo-info">
        <h5 class="welcome-header">
            Welcome @Model.employee.Name!
            <a href="#calendar-section" class="calendar-link">Get into your Calendar?</a> | <a class="calendar-link"
                href="#kanban">Get into your Kanban?</a>
        </h5>
        <!-- Content wrapper -->
        <div class="content-wrapper">
            <!-- Content -->
            <div class="container-xxl flex-grow-1 container-p-y">

                <!-- Centered align Cards -->
                <div class="row">
                    <!-- single card  -->
                    <div class="col-12 mb-6">
                        <div class="card">
                            <div class="card-widget-separator-wrapper">
                                <div class="card-body card-widget-separator">
                                    <div class="row gy-4 gy-sm-1">
                                        <div class="col-sm-6 col-lg-3">
                                            <div
                                                class="d-flex justify-content-between align-items-center card-widget-1 border-end pb-4 pb-sm-0">
                                                <div>
                                                    <h4 class="mb-0">@Model.totalProjectsAssigned</h4>
                                                    <p class="mb-0"><a asp-controller="UserHome"
                                                            asp-action="Projects">Project(s)</a> Assigned To</p>
                                                </div>
                                                <div class="avatar me-sm-6">
                                                    <span
                                                        class="avatar-initial rounded bg-label-secondary text-heading">
                                                        <i class="bx bx-user bx-26px"></i>
                                                    </span>
                                                </div>
                                            </div>
                                            <hr class="d-none d-sm-block d-lg-none me-6">
                                        </div>
                                        <div class="col-sm-6 col-lg-3">
                                            <div
                                                class="d-flex justify-content-between align-items-center card-widget-2 border-end pb-4 pb-sm-0">
                                                <div>
                                                    <h4 class="mb-0">@Model.totalTasksAssigned</h4>
                                                    <p class="mb-0"><a asp-action="Projects" asp-controller="UserHome">Task(s)</a> Assigned To</p>
                                                </div>
                                                <div class="avatar me-lg-6">
                                                    <span
                                                        class="avatar-initial rounded bg-label-secondary text-heading">
                                                        <i class="bx bx-file bx-26px"></i>
                                                    </span>
                                                </div>
                                            </div>
                                            <hr class="d-none d-sm-block d-lg-none">
                                        </div>
                                        <div class="col-sm-6 col-lg-3">
                                            <div
                                                class="d-flex justify-content-between align-items-center border-end pb-4 pb-sm-0 card-widget-3">
                                                <div>
                                                    <h4 class="mb-0">@Model.completedTasksCount</h4>
                                                    <p class="mb-0">Tasks Completed</p>
                                                </div>
                                                <div class="avatar me-sm-6">
                                                    <span
                                                        class="avatar-initial rounded bg-label-secondary text-heading">
                                                        <i class="bx bx-check-double bx-26px"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-sm-6 col-lg-3">
                                            <div class="d-flex justify-content-between align-items-center">
                                                <div>
                                                    <h4 class="mb-0">@Model.pendingTasksCount</h4>
                                                    <p class="mb-0">Tasks In Progress</p>
                                                </div>
                                                <div class="avatar">
                                                    <span
                                                        class="avatar-initial rounded bg-label-secondary text-heading">
                                                        <i class="bx bx-error-circle bx-26px"></i>
                                                    </span>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /single card  -->

                </div>
                <!--/ Cards with few info -->


                <!-- Centered align Cards -->
                <div class="row">
                    <div class="col-lg-3 col-md-6 col-sm-6 mb-6">
                        <div class="card">
                            <div class="card-header d-flex align-items-center justify-content-between">
                                <h6 class="card-title fw-normal m-0 me-2">Completed Projects</h6>
                            </div>
                            <div class="card-body text-center">
                                <h4 class="card-title mb-0">@Model.completedProjectsCount</h4>
                                <p class="mb-2">Out of @Model.totalProjectsAssigned</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 col-sm-6 mb-6">
                        <div class="card">
                            <div class="card-header d-flex align-items-center justify-content-between">
                                <h6 class="card-title fw-normal m-0 me-2">Overdue Tasks</h6>
                            </div>
                            <div class="card-body text-center">
                                <h4 class="card-title mb-0">@Model.overdueTasksCount</h4>
                                <p class="mb-2">Out of @Model.totalTasksAssigned</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 col-sm-6 mb-6">
                        <div class="card">
                            <div class="card-header d-flex align-items-center justify-content-between">
                                <h6 class="card-title fw-normal m-0 me-2">Project in Progress</h6>
                            </div>
                            <div class="card-body text-center">
                                <h4 class="card-title mb-0">@Model.activeProjectsCount</h4>
                                <p class="mb-2">Out of @Model.totalProjectsAssigned</p>
                            </div>
                        </div>
                    </div>
                    <div class="col-lg-3 col-md-6 col-sm-6 mb-6">
                        <div class="card">
                            <div class="card-header d-flex align-items-center justify-content-between">
                                <h6 class="card-title fw-normal m-0 me-2">Tasks in Progress</h6>
                            </div>
                            <div class="card-body text-center">
                                <h4 class="card-title mb-0">@Model.pendingTasksCount</h4>
                                <p class="mb-2">Out of @Model.totalTasksAssigned</p>
                            </div>
                        </div>
                    </div>
                </div>
                <!--/ Centered align Cards -->


                <!-- Calendar Section -->
                <div id="calendar-section" class="calendar-container">
                    <div id="calendar"></div>
                </div>

                <!-- Kanban Section -->
                <div id="kanban" class="kanban-container">
                    <h2 style="color: #A2A4FF; font-weight: bolder;">Kanban</h2>
                    <div class="kanban-board">
                        <div class="kanban-column" id="backlog">
                            <h3>Backlog</h3>
                            @{
                                int index = 1;
                            }
                            @if (Model.tasks != null)
                            {
                                foreach (var task in Model.tasks.Where(t => t.Status ==
                                ProjectDashboard.Models.TaskStatus.Backlog))
                                {
                                    <div class="kanban-task" data-task-id="@task.Id">
                                        <div class="task-title">@task.TaskName</div>
                                        <div class="task-priority high">@task.Priority</div>
                                        <div class="task-details">
                                            <div>End Date: @(task.EndDate?.ToString("dd/MM/yyyy") ?? "N/A")</div>
                                            <div>Time Left: @(GetTimeLeft(task.EndDate)) days</div>
                                        </div>
                                        <div class="task-progress">
                                            <div class="task-progress-bar"
                                                style="width: @(GetProgress(task.StartDate, task.EndDate));"></div>
                                        </div>
                                        <div class="task-assigned">Project : <b>@task.Project.Name</b></div>
                                    </div>
                                    index++;
                                }
                            }
                        </div>
                        <div class="kanban-column" id="todo">
                            <h3>To Do</h3>
                            @if (Model.tasks != null)
                            {
                                foreach (var task in Model.tasks.Where(t => t.Status ==
                                ProjectDashboard.Models.TaskStatus.Todo))
                                {
                                    <div class="kanban-task" data-task-id="@task.Id">
                                        <div class="task-title">@task.TaskName</div>
                                        <div class="task-priority high">@task.Priority</div>
                                        <div class="task-details">
                                            <div>End Date: @(task.EndDate?.ToString("dd/MM/yyyy") ?? "N/A")</div>
                                            <div>Time Left: @(GetTimeLeft(task.EndDate)) days</div>
                                        </div>
                                        <div class="task-progress">
                                            <div class="task-progress-bar"
                                                style="width: @(GetProgress(task.StartDate, task.EndDate));"></div>
                                        </div>
                                        <div class="task-assigned">Project : <b>@task.Project.Name</b></div>
                                    </div>
                                    index++;
                                }
                            }
                        </div>
                        <div class="kanban-column" id="InProgress">
                            <h3>In Progress</h3>
                            @if (Model.tasks != null)
                            {
                                foreach (var task in Model.tasks.Where(t => t.Status ==
                                ProjectDashboard.Models.TaskStatus.InProgress))
                                {
                                    <div class="kanban-task" data-task-id="@task.Id">
                                        <div class="task-title">@task.TaskName</div>
                                        <div class="task-priority high">@task.Priority</div>
                                        <div class="task-details">
                                            <div>End Date: @(task.EndDate?.ToString("dd/MM/yyyy") ?? "N/A")</div>
                                            <div>Time Left: @(GetTimeLeft(task.EndDate)) days</div>
                                        </div>
                                        <div class="task-progress">
                                            <div class="task-progress-bar"
                                                style="width: @(GetProgress(task.StartDate, task.EndDate));"></div>
                                        </div>
                                        <div class="task-assigned">Project : <b>@task.Project.Name</b></div>
                                    </div>
                                    index++;
                                }
                            }
                        </div>
                        <div class="kanban-column" id="Completed">
                            <h3>Done</h3>
                            @if (Model.tasks != null)
                            {
                                foreach (var task in Model.tasks.Where(t => t.Status ==
                                ProjectDashboard.Models.TaskStatus.Completed))
                                {
                                    <div class="kanban-task" data-task-id="@task.Id">
                                        <div class="task-title">@task.TaskName</div>
                                        <div class="task-priority high">@task.Priority</div>
                                        <div class="task-details">
                                            <div>End Date: @(task.EndDate?.ToString("dd/MM/yyyy") ?? "N/A")</div>
                                            <div>Time Left: @(GetTimeLeft(task.EndDate)) days</div>
                                        </div>
                                        <div class="task-progress">
                                            <div class="task-progress-bar"
                                                style="width: @(GetProgress(task.StartDate, task.EndDate));"></div>
                                        </div>
                                        <div class="task-assigned">Project : <b>@task.Project.Name</b></div>
                                    </div>
                                    index++;
                                }
                            }
                        </div>
                    </div>
                </div>
            </div>
            <!-- /Content -->
        </div>
    </div>
</div>

@section PageScripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Initialize FullCalendar
            var calendarEl = document.getElementById('calendar');
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialView: 'dayGridMonth',
                height: 'auto',
                contentHeight: 'auto',
                aspectRatio: 1.5,
                headerToolbar: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'dayGridMonth,timeGridWeek,timeGridDay'
                },
                dayMaxEvents: true,
                eventTimeFormat: {
                    hour: 'numeric',
                    minute: '2-digit',
                    meridiem: 'short'
                },
                events: @Html.Raw(Json.Serialize(Model.calendarEvents)),
                eventColor: '#378006',
                eventTextColor: '#fff'
            });
            calendar.render();

            // Initialize Dragula for Kanban

            // Initialize Dragula for Kanban
            dragula([document.getElementById('backlog'), document.getElementById('todo'), document.getElementById('InProgress'), document.getElementById('Completed')])
                .on('drag', function (el) {
                    el.classList.add('dragging');
                })
                .on('drop', async function (el, target, source, sibling) {
                    el.classList.remove('dragging');

                    // Extract task ID and target column status
                    const taskId = el.dataset.taskId; // Access dataset property of the dragged element
                    const targetStatus = target.id; // e.g., "backlog", "todo", "InProgress", "Completed"

                    try {
                        // Make an AJAX POST request to update the task status
                        const response = await fetch('/UserHome/updateTaskStatus', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                taskId: taskId,
                                status: targetStatus.charAt(0).toUpperCase() + targetStatus.slice(1) // Convert to PascalCase
                            })
                        });

                        console.log(response);

                        if (!response.ok) {
                            throw new Error('Failed to update task status');
                        }

                        console.log(`Task ${taskId} moved to ${targetStatus}`);
                    } catch (error) {
                        console.error('Error updating task status:', error);
                        alert('An error occurred while updating the task status. Please try again.');
                    }
                });
        });
    </script>
}