@model ProjectDashboard.Models.Employee
@{
    ViewData["Title"] = "Account settings - Account";
    ViewData["navbarHideToggle"] = true;
    ViewData["isMenu"] = false;
    ViewData["menuFixed"] = "";
}

@* ************** Content ************** *@
<div class="row">
    <div class="col-md-12">
        <div class="nav-align-top">
            <ul class="nav nav-pills flex-column flex-md-row mb-6">
                <li class="nav-item"><a class="nav-link active" href="javascript:void(0);"><i
                            class="bx bx-sm bx-user me-1_5"></i> Account</a></li>
                @if ((string?)ViewData["Role"] == "Admin")
                {
                    <li class="nav-item"><a class="nav-link" asp-controller="Home" asp-action="Index"><i
                                class="bx bx-sm bx-home me-1_5"></i>Back to
                            Home</a></li>
                }
                else
                {
                    <li class="nav-item"><a class="nav-link" asp-controller="UserHome" asp-action="Index"><i
                                class="bx bx-sm bx-home me-1_5"></i>Back to
                            Home</a></li>
                }

            </ul>
        </div>
        <div class="card mb-6">
            <!-- Account -->
            <div class="card-body">
                <div class="d-flex align-items-start align-items-sm-center gap-6 pb-4 border-bottom">
                    <img src="~/img/avatars/1.png" alt="user-avatar" class="d-block w-px-100 h-px-100 rounded"
                        id="uploadedAvatar" />
                    <div class="button-wrapper">
                        <label for="upload" class="btn btn-primary me-3 mb-4" tabindex="0">
                            <span class="d-none d-sm-block">Upload new photo</span>
                            <i class="bx bx-upload d-block d-sm-none"></i>
                            <input type="file" id="upload" class="account-file-input" hidden
                                accept="image/png, image/jpeg" />
                        </label>
                        <button type="button" class="btn btn-outline-secondary account-image-reset mb-4">
                            <i class="bx bx-reset d-block d-sm-none"></i>
                            <span class="d-none d-sm-block">Reset</span>
                        </button>

                        <div>Allowed JPG, GIF or PNG. Max size of 800K</div>
                    </div>
                </div>
            </div>
            <div class="card-body pt-4">
                <form id="formAccountSettings" method="POST" asp-action="Profile" asp-controller="Account"
                    enctype="multipart/form-data">
                    <input type="hidden" name="Id" value="@Model.Id" />
                    <input type="hidden" name="Password" value="@Model.Password" />
                    <div class="row g-6">
                        <div class="col-md-6">
                            <label for="Name" class="form-label">Name</label>
                            <input class="form-control" type="text" id="Name" name="Name" value="@Model.Name"
                                autofocus />
                        </div>
                        <div class="col-md-6">
                            <label for="Cin" class="form-label">CIN</label>
                            <input class="form-control" type="text" name="Cin" id="Cin" value="@Model.Cin" />
                        </div>
                        <div class="col-md-6">
                            <label for="email" class="form-label">E-mail</label>
                            <input class="form-control" type="email" id="email" name="Email" value="@Model.Email"
                                placeholder="john.doe&#64;example.com" />
                        </div>
                    </div>
                    <div class="mt-6">
                        <button type="submit" class="btn btn-primary me-3">Save changes</button>
                    </div>
                </form>
            </div>
            <!-- /Account -->
        </div>
    </div>
</div>


<!-- Toast container -->
<div id="toastContainer" aria-live="polite" aria-atomic="true" class="position-fixed bottom-0 end-0 p-3"
    style="z-index: 1100;">
</div>


@* TODO: put js code in a separate file *@
@section PageScripts {
    <script src="~/js/ui-toasts.js"></script>
    <script>
        function showToast(type, message) {
            var toastElement = document.createElement('div');
            toastElement.className = `toast align-items-center text-white ${type === 'error' ? 'bg-danger' : 'bg-success'} border-0 m-2`;
            toastElement.setAttribute('role', 'alert');
            toastElement.setAttribute('aria-live', 'assertive');
            toastElement.setAttribute('aria-atomic', 'true');
            toastElement.setAttribute('data-bs-autohide', 'true');
            toastElement.setAttribute('data-bs-delay', '3000');

            var toastBody = `
                                                                        <div class="toast-header">
                                                                            <i class='bx bx-bell me-2'></i>
                                                                            <strong class="me-auto">Notification</strong>
                                                                            <small>Just now</small>
                                                                            <button type="button" class="btn-close" data-bs-dismiss="toast" aria-label="Close"></button>
                                                                        </div>
                                                                        <div class="toast-body">
                                                                            ${message}
                                                                        </div>`;

            toastElement.innerHTML = toastBody;

            var toastContainer = document.getElementById('toastContainer');
            toastContainer.appendChild(toastElement);

            var toast = new bootstrap.Toast(toastElement);
            toast.show();
        }

        // Check if TempData has any message to show
        @if (TempData["Success"] != null)
            {
                <text>
                    showToast('success', '@TempData["Success"]');
                                                                                                                            @TempData.Remove("Success");
                </text>
        }

            @if (TempData["Error"] != null)
            {
                <text>
                    showToast('error', '@TempData["Error"]');
                                                                                                                            @TempData.Remove("Error");
                </text>
        }
    </script>

}
